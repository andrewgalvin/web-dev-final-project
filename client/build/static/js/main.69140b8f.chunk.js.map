{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/Dashboard/Weather.js","components/Dashboard/Todo.js","components/Dashboard/Dashboard.js","components/Login/Login.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","loggedIn","onClick","e","fetch","method","headers","credentials","then","r","json","data","status","body","obj","setLoggedIn","Home","Weather","useState","lat","setLat","long","setLong","setData","loading","setLoading","useEffect","isMounted","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","res","result","cod","celsius","main","name","preventDefault","Date","now","toDateString","weather","description","charAt","toUpperCase","slice","temp","toFixed","humidity","sys","sunrise","toLocaleTimeString","sunset","style","padding","Todo","type","placeholder","Dashboard","Login","navigate","useNavigate","onSubmit","FormData","currentTarget","USERNAME","get","PASSWORD","JSON","stringify","username","password","alert","message","for","id","required","class","Register","EMAIL","CONFIRMPASSWORD","String","toLowerCase","match","document","getElementById","border","email","RequireAuth","children","location","useLocation","replace","state","path","pathname","App","isLoading","setLoaded","Fragment","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.69140b8f.chunk.js","sourcesContent":["import \"../../app.css\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header(props) {\r\n  const handleLogoutClick = (e) => {\r\n    fetch(\"/api/user/session/remove\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Cache-Control\": \"no-cache\",\r\n      },\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((r) => r.json().then((data) => ({ status: r.status, body: data })))\r\n      .then(function (obj) {\r\n        if (obj.status === 200) {\r\n          props.setLoggedIn(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"header__container\">\r\n        <h1>Web Dev Final Project</h1>\r\n        <nav className=\"header__nav\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n\r\n            {!props.loggedIn && (\r\n              <>\r\n                <li>\r\n                  <Link to=\"/register\">Register</Link>\r\n                </li>{\" \"}\r\n                <li>\r\n                  <Link to=\"/login\">Login</Link>\r\n                </li>\r\n              </>\r\n            )}\r\n\r\n            {props.loggedIn && (\r\n              <>\r\n                <li>\r\n                  <Link to=\"/dashboard\">Dashboard</Link>\r\n                </li>\r\n                <li onClick={handleLogoutClick}>\r\n                  <Link to=\"/login\">Logout</Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import \"./Home.css\";\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>Home (Public)</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./Weather.css\";\r\n\r\nexport default function Weather(props) {\r\n  const [lat, setLat] = useState([]);\r\n  const [long, setLong] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      setLat(position.coords.latitude);\r\n      setLong(position.coords.longitude);\r\n    });\r\n\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather/?lat=${lat}&lon=${long}&units=metric&APPID=ed987e2716aae4a47523c9fb7aeb9abb`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.cod !== \"400\" && result.cod !== \"429\") {\r\n          if (isMounted) {\r\n            setLoading(false);\r\n            setData(result);\r\n          }\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [lat, long]); // eslint-disable-line\r\n\r\n  const handleRefresh = (e) => {\r\n    e.preventDefault();\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      setLat(position.coords.latitude);\r\n      setLong(position.coords.longitude);\r\n    });\r\n\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather/?lat=${lat}&lon=${long}&units=metric&APPID=ed987e2716aae4a47523c9fb7aeb9abb`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.cod !== \"400\" && result.cod !== \"429\") {\r\n          setLoading(false);\r\n          setData(result);\r\n        }\r\n      });\r\n  };\r\n\r\n  const convertToFahrenheit = (celsius) => {\r\n    return (celsius * 9) / 5 + 32;;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div>\r\n          <h1>Click here to refresh. (Doesn't work yet)</h1>\r\n        </div>\r\n      ) : (\r\n        <div className=\"weather\">\r\n          {typeof data.main !== \"undefined\" ? (\r\n            <div>\r\n              <div className=\"weather-city\">\r\n                {data.name}\r\n                <button className=\"weather-refresh\" onClick={handleRefresh}>\r\n                  Refresh\r\n                </button>\r\n              </div>\r\n              <div className=\"weather-content\">\r\n                <p>{new Date(Date.now()).toDateString()}</p>\r\n                <p>\r\n                  {data.weather[0].description.charAt(0).toUpperCase() +\r\n                    data.weather[0].description.slice(1)}\r\n                </p>\r\n              </div>\r\n              <div className=\"weather-content\">\r\n                <p>Temprature: {convertToFahrenheit(data.main.temp).toFixed(2)} &#8457;</p>\r\n                <p>Humidity: {data.main.humidity}%</p>\r\n              </div>\r\n              <div className=\"weather-content\">\r\n                <p>\r\n                  Sunrise:{\" \"}\r\n                  {new Date(data.sys.sunrise * 1000).toLocaleTimeString(\r\n                    \"en-US\"\r\n                  )}\r\n                </p>\r\n                <p>\r\n                  Sunset:{\" \"}\r\n                  {new Date(data.sys.sunset * 1000).toLocaleTimeString(\"en-US\")}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div style={{ padding: \"20px 20px\" }}>\r\n              <h4>Fetching local weather data...</h4>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import \"./Todo.css\";\r\n\r\nexport default function Todo(props) {\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo-title\">\r\n        <h5>Your Todo List</h5>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"new-todo\"\r\n            className=\"new-todo\"\r\n            placeholder=\"Enter a new todo\"\r\n          ></input>\r\n          <button className=\"new-todo-btn\">Add</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"todo-list\">\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 1</p>\r\n        </div>\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 2</p>\r\n        </div>\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 3</p>\r\n        </div>\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 4</p>\r\n        </div>\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 5</p>\r\n        </div>\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 6</p>\r\n        </div>\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 7</p>\r\n        </div>\r\n        <div className=\"todo-item\">\r\n          <input type=\"checkbox\" />\r\n          <p>Item 8</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Dashboard.css\";\r\nimport Weather from \"./Weather.js\";\r\nimport Todo from \"./Todo.js\";\r\n\r\nexport default function Dashboard(props) {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <article>\r\n        <div className=\"dashboard-weather\">\r\n          <Weather/>\r\n        </div>\r\n      </article>\r\n      <article>\r\n        <div className=\"dashboard-todo-list\">\r\n          <Todo/>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Login.css\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function Login(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginClick = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n\r\n    let USERNAME = data.get(\"email\");\r\n    let PASSWORD = data.get(\"password\");\r\n\r\n    fetch(\"/api/user/login\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: USERNAME,\r\n        password: PASSWORD,\r\n      }),\r\n    })\r\n      .then((r) => r.json().then((data) => ({ status: r.status, body: data })))\r\n      .then(function (obj) {\r\n        if (obj.status === 200) {\r\n          props.setLoggedIn(true);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          alert(obj.body.message);\r\n        }\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"login\">\r\n      <form onSubmit={handleLoginClick}>\r\n        <div className=\"login-container\">\r\n          <h1>\r\n            <span>Login</span>\r\n          </h1>\r\n          <p>Fill in the below form to login.</p>\r\n\r\n          <div className=\"login-input\">\r\n            <label for=\"email\">\r\n              <b>Email</b>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              required\r\n            />\r\n\r\n            <label for=\"password\">\r\n              <b>Password</b>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              required\r\n            />\r\n            <button type=\"submit\" class=\"loginbtn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"../../app.css\";\r\nimport \"./Register.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Register(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  const handleRegisterClick = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n\r\n    let EMAIL = data.get(\"email\");\r\n    let PASSWORD = data.get(\"password\");\r\n    let CONFIRMPASSWORD = data.get(\"confirm-password\");\r\n\r\n    // Validate user email using REGEX\r\n    // regex taken from http://jsfiddle.net/ghvj4gy9/\r\n    if (!validateEmail(EMAIL)) {\r\n      document.getElementById(\"email\").style.border = \"1px solid red\";\r\n      return;\r\n    } else {\r\n      document.getElementById(\"email\").style.border = \"none\";\r\n    }\r\n\r\n    // Validate passwords are the same\r\n    if (PASSWORD !== CONFIRMPASSWORD) {\r\n      document.getElementById(\"password\").style.border = \"1px solid red\";\r\n      document.getElementById(\"confirm-password\").style.border =\r\n        \"1px solid red\";\r\n      return;\r\n    } else {\r\n      document.getElementById(\"password\").style.border = \"none\";\r\n      document.getElementById(\"confirm-password\").style.border = \"none\";\r\n    }\r\n\r\n    fetch(\"/api/user/register\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: EMAIL,\r\n        password: PASSWORD,\r\n      }),\r\n    })\r\n      .then((r) => r.json().then((data) => ({ status: r.status, body: data })))\r\n      .then(function (obj) {\r\n        if (obj.status === 200) {\r\n          alert(\"Account created!\");\r\n          navigate(\"/login\");\r\n        } else if (obj.status === 401) {\r\n          alert(\"Email taken.\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"register\">\r\n      <form onSubmit={handleRegisterClick}>\r\n        <div className=\"register-container\">\r\n          <h1>\r\n            <span>Register</span>\r\n          </h1>\r\n          <p>Fill in the below form to register.</p>\r\n\r\n          <div className=\"register-input\">\r\n            <label for=\"email\">\r\n              <b>Email</b>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              required\r\n            />\r\n\r\n            <label for=\"password\">\r\n              <b>Password</b>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              required\r\n            />\r\n\r\n            <label for=\"confirm-password\">\r\n              <b>Confirm Password</b>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              name=\"confirm-password\"\r\n              id=\"confirm-password\"\r\n              required\r\n            />\r\n            <button type=\"submit\" class=\"registerbtn\">\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { useLocation, Navigate } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Header/Header.js\";\r\n\r\nimport Home from \"./components/Home/Home.js\";\r\nimport Dashboard from \"./components/Dashboard/Dashboard.js\";\r\nimport Login from \"./components/Login/Login.js\";\r\nimport Register from \"./components/Register/Register.js\";\r\n\r\nimport \"./app.css\";\r\n\r\nfunction RequireAuth({ children, loggedIn }) {\r\n  const location = useLocation();\r\n\r\n  return loggedIn ? (\r\n    children\r\n  ) : (\r\n    <Navigate to=\"/login\" replace state={{ path: location.pathname }} />\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [isLoading, setLoaded] = useState(true);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/user/session\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Cache-Control\": \"no-cache\",\r\n      },\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((r) => r.json().then((data) => ({ status: r.status, body: data })))\r\n      .then(function (obj) {\r\n        if (obj.status === 200) {\r\n          setLoggedIn(true);\r\n          setLoaded(!isLoading);\r\n        } else {\r\n          setLoaded(!isLoading);\r\n        }\r\n      });\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <Header loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route\r\n              path=\"/login\"\r\n              element={<Login loggedIn={loggedIn} setLoggedIn={setLoggedIn} />}\r\n            />\r\n            <Route path=\"/register\" element={<Register />} />\r\n            <Route\r\n              path=\"/dashboard\"\r\n              element={\r\n                <RequireAuth loggedIn={loggedIn}>\r\n                  <Dashboard loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\r\n                </RequireAuth>\r\n              }\r\n            />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n        <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}